{
  "kind" : "HighLevelGrammar",
  "rules" : [
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Opt",
                  "name" : "Sequence?",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Sequence"
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Sequence"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "Associativity",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 114
                          },
                          {
                            "kind" : "Char",
                            "val" : 105
                          },
                          {
                            "kind" : "Char",
                            "val" : 103
                          },
                          {
                            "kind" : "Char",
                            "val" : 104
                          },
                          {
                            "kind" : "Char",
                            "val" : 116
                          }
                        ]
                      },
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 108
                          },
                          {
                            "kind" : "Char",
                            "val" : 101
                          },
                          {
                            "kind" : "Char",
                            "val" : 102
                          },
                          {
                            "kind" : "Char",
                            "val" : 116
                          }
                        ]
                      },
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 110
                          },
                          {
                            "kind" : "Char",
                            "val" : 111
                          },
                          {
                            "kind" : "Char",
                            "val" : 110
                          },
                          {
                            "kind" : "Char",
                            "val" : 45
                          },
                          {
                            "kind" : "Char",
                            "val" : 97
                          },
                          {
                            "kind" : "Char",
                            "val" : 115
                          },
                          {
                            "kind" : "Char",
                            "val" : 115
                          },
                          {
                            "kind" : "Char",
                            "val" : 111
                          },
                          {
                            "kind" : "Char",
                            "val" : 99
                          }
                        ]
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "(",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 40
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "Sequence"
                  },
                  {
                    "kind" : "Plus",
                    "name" : "(| Sequence)+",
                    "s" : {
                      "kind" : "Sequence",
                      "name" : "(| Sequence)",
                      "symbols" : [
                        {
                          "kind" : "Terminal",
                          "name" : "|",
                          "nodeType" : "Keyword",
                          "regex" : {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 124
                              }
                            ]
                          }
                        },
                        {
                          "kind" : "Nonterminal",
                          "name" : "Sequence"
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ")",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 41
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Assoc"
              }
            }
          ]
        }
      ],
      "head" : "Alternative"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "(",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 40
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Regexs"
                  },
                  {
                    "kind" : "Plus",
                    "name" : "(| Regexs)+",
                    "s" : {
                      "kind" : "Sequence",
                      "name" : "(| Regexs)",
                      "symbols" : [
                        {
                          "kind" : "Terminal",
                          "name" : "|",
                          "nodeType" : "Keyword",
                          "regex" : {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 124
                              }
                            ]
                          }
                        },
                        {
                          "kind" : "Nonterminal",
                          "name" : "Regexs"
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ")",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 41
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Alternation"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "NontName"
                },
                "associativity" : "UNDEFINED",
                "label" : "Nont"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "CharClass"
                },
                "associativity" : "UNDEFINED",
                "label" : "CharClass"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "(",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 40
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Regex"
                  },
                  {
                    "kind" : "Plus",
                    "name" : "Regex+",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Regex"
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ")",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 41
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Sequence"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Regex"
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "?",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 63
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Option"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "(",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 40
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Regex"
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ")",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 41
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Bracket"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Regex"
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "*",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 42
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Star"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "Char",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 39
                      },
                      {
                        "kind" : "regex.Star",
                        "regex" : {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "CharRange",
                                  "start" : 1,
                                  "end" : 33
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 35,
                                  "end" : 38
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 40,
                                  "end" : 91
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 93,
                                  "end" : 1114111
                                }
                              ]
                            },
                            {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 92
                                },
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 34
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 39
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 92
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 102
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 110
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 114
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 116
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "kind" : "Char",
                        "val" : 39
                      }
                    ]
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Character"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Regex"
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "+",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 43
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Plus"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "String",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 34
                      },
                      {
                        "kind" : "regex.Star",
                        "regex" : {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "CharRange",
                                  "start" : 1,
                                  "end" : 33
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 35,
                                  "end" : 38
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 40,
                                  "end" : 91
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 93,
                                  "end" : 1114111
                                }
                              ]
                            },
                            {
                              "kind" : "regex.Seq",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 92
                                },
                                {
                                  "kind" : "regex.Alt",
                                  "symbols" : [
                                    {
                                      "kind" : "Char",
                                      "val" : 34
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 39
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 92
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 102
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 110
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 114
                                    },
                                    {
                                      "kind" : "Char",
                                      "val" : 116
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "kind" : "Char",
                        "val" : 34
                      }
                    ]
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "String"
              }
            }
          ]
        }
      ],
      "head" : "Regex"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives"
        }
      ],
      "head" : "Expression"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "$default$"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives"
        }
      ],
      "head" : "Symbol"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Star",
                  "name" : "Symbol*",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Symbol"
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Sequence"
              }
            }
          ]
        }
      ],
      "head" : "Symbols"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Identifier"
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "VarName"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Identifier"
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "NontName"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "RangeChar",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 92
                          },
                          {
                            "kind" : "regex.Alt",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 32
                              },
                              {
                                "kind" : "Char",
                                "val" : 45
                              },
                              {
                                "kind" : "CharRange",
                                "start" : 91,
                                "end" : 93
                              },
                              {
                                "kind" : "Char",
                                "val" : 102
                              },
                              {
                                "kind" : "Char",
                                "val" : 110
                              },
                              {
                                "kind" : "Char",
                                "val" : 114
                              },
                              {
                                "kind" : "Char",
                                "val" : 116
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "CharRange",
                            "start" : 1,
                            "end" : 31
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 33,
                            "end" : 44
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 46,
                            "end" : 90
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 94,
                            "end" : 1114111
                          }
                        ]
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "-",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 45
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "RangeChar",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 92
                            },
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 32
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 45
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 91,
                                  "end" : 93
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 102
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 110
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 114
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 116
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "CharRange",
                              "start" : 1,
                              "end" : 31
                            },
                            {
                              "kind" : "CharRange",
                              "start" : 33,
                              "end" : 44
                            },
                            {
                              "kind" : "CharRange",
                              "start" : 46,
                              "end" : 90
                            },
                            {
                              "kind" : "CharRange",
                              "start" : 94,
                              "end" : 1114111
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Range"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "RangeChar",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 92
                          },
                          {
                            "kind" : "regex.Alt",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 32
                              },
                              {
                                "kind" : "Char",
                                "val" : 45
                              },
                              {
                                "kind" : "CharRange",
                                "start" : 91,
                                "end" : 93
                              },
                              {
                                "kind" : "Char",
                                "val" : 102
                              },
                              {
                                "kind" : "Char",
                                "val" : 110
                              },
                              {
                                "kind" : "Char",
                                "val" : 114
                              },
                              {
                                "kind" : "Char",
                                "val" : 116
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "CharRange",
                            "start" : 1,
                            "end" : 31
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 33,
                            "end" : 44
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 46,
                            "end" : 90
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 94,
                            "end" : 1114111
                          }
                        ]
                      }
                    ]
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Character"
              }
            }
          ]
        }
      ],
      "head" : "Range"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Identifier"
                },
                "rest" : [
                  {
                    "kind" : "Opt",
                    "name" : "Parameters?",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Parameters"
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ":",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 58
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "Body"
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ";",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 59
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Syntax"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Opt",
                  "name" : "layout?",
                  "s" : {
                    "kind" : "Terminal",
                    "name" : "layout",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 108
                        },
                        {
                          "kind" : "Char",
                          "val" : 97
                        },
                        {
                          "kind" : "Char",
                          "val" : 121
                        },
                        {
                          "kind" : "Char",
                          "val" : 111
                        },
                        {
                          "kind" : "Char",
                          "val" : 117
                        },
                        {
                          "kind" : "Char",
                          "val" : 116
                        }
                      ]
                    }
                  }
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "terminal",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 116
                        },
                        {
                          "kind" : "Char",
                          "val" : 101
                        },
                        {
                          "kind" : "Char",
                          "val" : 114
                        },
                        {
                          "kind" : "Char",
                          "val" : 109
                        },
                        {
                          "kind" : "Char",
                          "val" : 105
                        },
                        {
                          "kind" : "Char",
                          "val" : 110
                        },
                        {
                          "kind" : "Char",
                          "val" : 97
                        },
                        {
                          "kind" : "Char",
                          "val" : 108
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "NontName"
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ":",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 58
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "RegexBody"
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ";",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 59
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Lexical"
              }
            }
          ]
        }
      ],
      "head" : "Rule"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "%",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 37
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Identifier"
                  }
                ],
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Label"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Plus",
                  "name" : "Rule+",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Rule"
                  }
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Definition"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Star",
                  "name" : "WhiteSpaceOrComment*",
                  "postConditions" : [
                    {
                      "kind" : "RegularExpressionCondition",
                      "type" : "NOT_FOLLOW",
                      "regularExpression" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 47
                          },
                          {
                            "kind" : "Char",
                            "val" : 47
                          }
                        ]
                      }
                    },
                    {
                      "kind" : "RegularExpressionCondition",
                      "type" : "NOT_FOLLOW",
                      "regularExpression" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 47
                          },
                          {
                            "kind" : "Char",
                            "val" : 42
                          }
                        ]
                      }
                    },
                    {
                      "kind" : "RegularExpressionCondition",
                      "type" : "NOT_FOLLOW",
                      "regularExpression" : {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "CharRange",
                            "start" : 9,
                            "end" : 10
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 12,
                            "end" : 13
                          },
                          {
                            "kind" : "Char",
                            "val" : 32
                          }
                        ]
                      }
                    }
                  ],
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "WhiteSpaceOrComment"
                  }
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Layout"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Identifier"
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Label"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "Comment",
                  "regex" : {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 47
                          },
                          {
                            "kind" : "Char",
                            "val" : 47
                          },
                          {
                            "kind" : "regex.Star",
                            "regex" : {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "CharRange",
                                  "start" : 1,
                                  "end" : 9
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 11,
                                  "end" : 12
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 14,
                                  "end" : 1114111
                                }
                              ]
                            }
                          },
                          {
                            "kind" : "regex.Alt",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 10
                              },
                              {
                                "kind" : "Char",
                                "val" : 13
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 47
                          },
                          {
                            "kind" : "Char",
                            "val" : 42
                          },
                          {
                            "kind" : "regex.Star",
                            "regex" : {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "regex.Seq",
                                  "symbols" : [
                                    {
                                      "kind" : "regex.Star",
                                      "regex" : {
                                        "kind" : "Char",
                                        "val" : 42
                                      }
                                    },
                                    {
                                      "kind" : "regex.Alt",
                                      "symbols" : [
                                        {
                                          "kind" : "CharRange",
                                          "start" : 1,
                                          "end" : 41
                                        },
                                        {
                                          "kind" : "CharRange",
                                          "start" : 43,
                                          "end" : 46
                                        },
                                        {
                                          "kind" : "CharRange",
                                          "start" : 48,
                                          "end" : 1114111
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 47
                                }
                              ]
                            }
                          },
                          {
                            "kind" : "regex.Plus",
                            "regex" : {
                              "kind" : "Char",
                              "val" : 42
                            }
                          },
                          {
                            "kind" : "Char",
                            "val" : 47
                          }
                        ]
                      }
                    ]
                  }
                },
                "associativity" : "UNDEFINED"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "WhiteSpaces",
                  "regex" : {
                    "kind" : "regex.Plus",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "CharRange",
                          "start" : 9,
                          "end" : 10
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 12,
                          "end" : 13
                        },
                        {
                          "kind" : "Char",
                          "val" : 32
                        }
                      ]
                    }
                  }
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "WhiteSpaceOrComment"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "(",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 40
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Star",
                    "name" : "Expression*",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Expression"
                    },
                    "separators" : [
                      {
                        "kind" : "Terminal",
                        "name" : ",",
                        "nodeType" : "Keyword",
                        "regex" : {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 44
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ")",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 41
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Arguments"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Star",
                  "name" : "RegexSequence*",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "RegexSequence"
                  },
                  "separators" : [
                    {
                      "kind" : "Terminal",
                      "name" : "|",
                      "nodeType" : "Keyword",
                      "regex" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 124
                          }
                        ]
                      }
                    }
                  ]
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "RegexBody"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Plus",
                  "name" : "Regex+",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Regex"
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Sequence"
              }
            }
          ]
        }
      ],
      "head" : "RegexSequence"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "{",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 123
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Expression"
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "}",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 125
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "ReturnExpression"
              }
            }
          ]
        }
      ],
      "head" : "ReturnExpression"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "(",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 40
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Star",
                    "name" : "Identifier*",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Identifier"
                    },
                    "separators" : [
                      {
                        "kind" : "Terminal",
                        "name" : ",",
                        "nodeType" : "Keyword",
                        "regex" : {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 44
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "kind" : "Terminal",
                    "name" : ")",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 41
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Parameters"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Plus",
                  "name" : "Regex+",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Regex"
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Sequence"
              }
            }
          ]
        }
      ],
      "head" : "Regexs"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Opt",
                  "name" : "Associativity?",
                  "s" : {
                    "kind" : "Terminal",
                    "name" : "Associativity",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 114
                            },
                            {
                              "kind" : "Char",
                              "val" : 105
                            },
                            {
                              "kind" : "Char",
                              "val" : 103
                            },
                            {
                              "kind" : "Char",
                              "val" : 104
                            },
                            {
                              "kind" : "Char",
                              "val" : 116
                            }
                          ]
                        },
                        {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 108
                            },
                            {
                              "kind" : "Char",
                              "val" : 101
                            },
                            {
                              "kind" : "Char",
                              "val" : 102
                            },
                            {
                              "kind" : "Char",
                              "val" : 116
                            }
                          ]
                        },
                        {
                          "kind" : "regex.Seq",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 110
                            },
                            {
                              "kind" : "Char",
                              "val" : 111
                            },
                            {
                              "kind" : "Char",
                              "val" : 110
                            },
                            {
                              "kind" : "Char",
                              "val" : 45
                            },
                            {
                              "kind" : "Char",
                              "val" : 97
                            },
                            {
                              "kind" : "Char",
                              "val" : 115
                            },
                            {
                              "kind" : "Char",
                              "val" : 115
                            },
                            {
                              "kind" : "Char",
                              "val" : 111
                            },
                            {
                              "kind" : "Char",
                              "val" : 99
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "Symbol"
                  },
                  {
                    "kind" : "Plus",
                    "name" : "Symbol+",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Symbol"
                    }
                  },
                  {
                    "kind" : "Opt",
                    "name" : "ReturnExpression?",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "ReturnExpression"
                    }
                  },
                  {
                    "kind" : "Opt",
                    "name" : "Label?",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Label"
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "MoreThanOne"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "Symbol"
                },
                "rest" : [
                  {
                    "kind" : "Opt",
                    "name" : "ReturnExpression?",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "ReturnExpression"
                    }
                  },
                  {
                    "kind" : "Opt",
                    "name" : "Label?",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Label"
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Single"
              }
            }
          ]
        }
      ],
      "head" : "Sequence"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "LetterOrDigits",
                  "preConditions" : [
                    {
                      "kind" : "RegularExpressionCondition",
                      "type" : "NOT_PRECEDE",
                      "regularExpression" : {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 36
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 65,
                            "end" : 90
                          },
                          {
                            "kind" : "Char",
                            "val" : 95
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 97,
                            "end" : 122
                          }
                        ]
                      }
                    }
                  ],
                  "postConditions" : [
                    {
                      "kind" : "RegularExpressionCondition",
                      "type" : "NOT_MATCH",
                      "regularExpression" : {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 114
                              },
                              {
                                "kind" : "Char",
                                "val" : 105
                              },
                              {
                                "kind" : "Char",
                                "val" : 103
                              },
                              {
                                "kind" : "Char",
                                "val" : 104
                              },
                              {
                                "kind" : "Char",
                                "val" : 116
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 105
                              },
                              {
                                "kind" : "Char",
                                "val" : 103
                              },
                              {
                                "kind" : "Char",
                                "val" : 110
                              },
                              {
                                "kind" : "Char",
                                "val" : 111
                              },
                              {
                                "kind" : "Char",
                                "val" : 114
                              },
                              {
                                "kind" : "Char",
                                "val" : 101
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 110
                              },
                              {
                                "kind" : "Char",
                                "val" : 111
                              },
                              {
                                "kind" : "Char",
                                "val" : 110
                              },
                              {
                                "kind" : "Char",
                                "val" : 45
                              },
                              {
                                "kind" : "Char",
                                "val" : 97
                              },
                              {
                                "kind" : "Char",
                                "val" : 115
                              },
                              {
                                "kind" : "Char",
                                "val" : 115
                              },
                              {
                                "kind" : "Char",
                                "val" : 111
                              },
                              {
                                "kind" : "Char",
                                "val" : 99
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 111
                              },
                              {
                                "kind" : "Char",
                                "val" : 102
                              },
                              {
                                "kind" : "Char",
                                "val" : 102
                              },
                              {
                                "kind" : "Char",
                                "val" : 115
                              },
                              {
                                "kind" : "Char",
                                "val" : 105
                              },
                              {
                                "kind" : "Char",
                                "val" : 100
                              },
                              {
                                "kind" : "Char",
                                "val" : 101
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 97
                              },
                              {
                                "kind" : "Char",
                                "val" : 108
                              },
                              {
                                "kind" : "Char",
                                "val" : 105
                              },
                              {
                                "kind" : "Char",
                                "val" : 103
                              },
                              {
                                "kind" : "Char",
                                "val" : 110
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 118
                              },
                              {
                                "kind" : "Char",
                                "val" : 97
                              },
                              {
                                "kind" : "Char",
                                "val" : 114
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 114
                              },
                              {
                                "kind" : "Char",
                                "val" : 101
                              },
                              {
                                "kind" : "Char",
                                "val" : 103
                              },
                              {
                                "kind" : "Char",
                                "val" : 101
                              },
                              {
                                "kind" : "Char",
                                "val" : 120
                              }
                            ]
                          },
                          {
                            "kind" : "regex.Seq",
                            "symbols" : [
                              {
                                "kind" : "Char",
                                "val" : 108
                              },
                              {
                                "kind" : "Char",
                                "val" : 101
                              },
                              {
                                "kind" : "Char",
                                "val" : 102
                              },
                              {
                                "kind" : "Char",
                                "val" : 116
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "regex.Alt",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 36
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 65,
                            "end" : 90
                          },
                          {
                            "kind" : "Char",
                            "val" : 95
                          },
                          {
                            "kind" : "CharRange",
                            "start" : 97,
                            "end" : 122
                          }
                        ]
                      },
                      {
                        "kind" : "regex.Star",
                        "regex" : {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 36
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 48,
                                  "end" : 57
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 65,
                                  "end" : 90
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 95
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 97,
                                  "end" : 122
                                }
                              ]
                            },
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "Char",
                                  "val" : 36
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 65,
                                  "end" : 90
                                },
                                {
                                  "kind" : "Char",
                                  "val" : 95
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 97,
                                  "end" : 122
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "associativity" : "UNDEFINED",
                "label" : "Ident"
              }
            }
          ]
        }
      ],
      "head" : "Identifier"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "[^",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 91
                      },
                      {
                        "kind" : "Char",
                        "val" : 94
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Star",
                    "name" : "Range*",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Range"
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "]",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 93
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "NotChars"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "[",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 91
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Star",
                    "name" : "Range*",
                    "s" : {
                      "kind" : "Nonterminal",
                      "name" : "Range"
                    }
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "]",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 93
                        }
                      ]
                    }
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Chars"
              }
            }
          ]
        }
      ],
      "head" : "CharClass"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Plus",
                  "name" : "Alternatives+",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Alternatives"
                  },
                  "separators" : [
                    {
                      "kind" : "Terminal",
                      "name" : ">",
                      "nodeType" : "Keyword",
                      "regex" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 62
                          }
                        ]
                      }
                    }
                  ]
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Body"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Plus",
                  "name" : "Rule+",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Rule"
                  }
                },
                "associativity" : "UNDEFINED"
              }
            }
          ]
        }
      ],
      "head" : "Definition"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "VarName"
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "=",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 61
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "Expression"
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Assign"
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "var",
                  "nodeType" : "Keyword",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 118
                      },
                      {
                        "kind" : "Char",
                        "val" : 97
                      },
                      {
                        "kind" : "Char",
                        "val" : 114
                      }
                    ]
                  }
                },
                "rest" : [
                  {
                    "kind" : "Nonterminal",
                    "name" : "VarName"
                  },
                  {
                    "kind" : "Terminal",
                    "name" : "=",
                    "nodeType" : "Keyword",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 61
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "Nonterminal",
                    "name" : "Expression"
                  }
                ],
                "associativity" : "UNDEFINED",
                "label" : "Declare"
              }
            }
          ]
        }
      ],
      "head" : "Binding"
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Plus",
                  "name" : "Alternative+",
                  "s" : {
                    "kind" : "Nonterminal",
                    "name" : "Alternative"
                  },
                  "separators" : [
                    {
                      "kind" : "Terminal",
                      "name" : "|",
                      "nodeType" : "Keyword",
                      "regex" : {
                        "kind" : "regex.Seq",
                        "symbols" : [
                          {
                            "kind" : "Char",
                            "val" : 124
                          }
                        ]
                      }
                    }
                  ]
                },
                "associativity" : "UNDEFINED",
                "label" : "Prec"
              }
            }
          ]
        }
      ],
      "head" : "Alternatives"
    }
  ],
  "layout" : {
    "kind" : "Nonterminal",
    "name" : "Layout",
    "nodeType" : "Layout"
  }
}
