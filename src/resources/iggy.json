{
  "kind" : "Grammar",
  "layout" : {
    "kind" : "Nonterminal",
    "name" : "Layout"
  },
  "rules" : [
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "offside",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 115
              },
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 100
              },
              {
                "kind" : "Char",
                "val" : 101
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "var",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 118
              },
              {
                "kind" : "Char",
                "val" : 97
              },
              {
                "kind" : "Char",
                "val" : 114
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "align",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 97
              },
              {
                "kind" : "Char",
                "val" : 108
              },
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 110
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "right",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 104
              },
              {
                "kind" : "Char",
                "val" : 116
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "ignore",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 110
              },
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 101
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "non-assoc",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 110
              },
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 110
              },
              {
                "kind" : "Char",
                "val" : 45
              },
              {
                "kind" : "Char",
                "val" : 97
              },
              {
                "kind" : "Char",
                "val" : 115
              },
              {
                "kind" : "Char",
                "val" : 115
              },
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 99
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "regex",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 120
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Keywords"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "left",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 108
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 116
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "RegexRule"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "NontName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ":",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 58
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "RegexBody"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Regex"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Regexs)",
        "nodeType" : "Seq"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "|",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 124
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regexs"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Sequence",
        "name" : "(| Regexs)",
        "symbols" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          },
          {
            "kind" : "Nonterminal",
            "name" : "Regexs"
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Regexs)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(| Regexs)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "(| Regexs)",
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(| Regexs)+",
        "s" : {
          "kind" : "Sequence",
          "name" : "(| Regexs)",
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "|",
              "regex" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 124
                  }
                ]
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Regexs"
            }
          ]
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Regexs)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(| Regexs)",
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(| Regexs)+",
        "s" : {
          "kind" : "Sequence",
          "name" : "(| Regexs)",
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "|",
              "regex" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 124
                  }
                ]
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Regexs"
            }
          ]
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regexs"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "(| Regexs)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Alternation"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "NontName"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Nont"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "CharClass"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "CharClass"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Regex+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Regex"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Regex+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Regex"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Sequence"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "?",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 63
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Option"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Bracket"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "*",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 42
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Star"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Char",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 39
              },
              {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "CharRange",
                          "start" : 1,
                          "end" : 33
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 35,
                          "end" : 38
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 40,
                          "end" : 91
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 93,
                          "end" : 1114111
                        }
                      ]
                    },
                    {
                      "kind" : "Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 92
                        },
                        {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 34
                            },
                            {
                              "kind" : "Char",
                              "val" : 39
                            },
                            {
                              "kind" : "Char",
                              "val" : 92
                            },
                            {
                              "kind" : "Char",
                              "val" : 102
                            },
                            {
                              "kind" : "Char",
                              "val" : 110
                            },
                            {
                              "kind" : "Char",
                              "val" : 114
                            },
                            {
                              "kind" : "Char",
                              "val" : 116
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "kind" : "Char",
                "val" : 39
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Character"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "+",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 43
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Plus"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regex"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "String",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 34
              },
              {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "CharRange",
                          "start" : 1,
                          "end" : 33
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 35,
                          "end" : 38
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 40,
                          "end" : 91
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 93,
                          "end" : 1114111
                        }
                      ]
                    },
                    {
                      "kind" : "Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 92
                        },
                        {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 34
                            },
                            {
                              "kind" : "Char",
                              "val" : 39
                            },
                            {
                              "kind" : "Char",
                              "val" : 92
                            },
                            {
                              "kind" : "Char",
                              "val" : 102
                            },
                            {
                              "kind" : "Char",
                              "val" : 110
                            },
                            {
                              "kind" : "Char",
                              "val" : 114
                            },
                            {
                              "kind" : "Char",
                              "val" : 116
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "kind" : "Char",
                "val" : 34
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "String"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Alternate, |, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Alternate, |, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "|",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 124
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Alternate"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Alternate+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Alternate"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Alternate, |, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Alternate"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Alternate+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Alternate"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Alternates"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Alternate, |, null}+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Prec"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ".l",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 46
              },
              {
                "kind" : "Char",
                "val" : 108
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "LExtent"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Number",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 49,
                    "end" : 57
                  },
                  {
                    "kind" : "regex.Star",
                    "regex" : {
                      "kind" : "CharRange",
                      "start" : 48,
                      "end" : 57
                    }
                  }
                ]
              },
              {
                "kind" : "Char",
                "val" : 48
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Number"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ".r",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 46
              },
              {
                "kind" : "Char",
                "val" : 114
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "RExtent"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Name"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ".yield",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 46
              },
              {
                "kind" : "Char",
                "val" : 121
              },
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 108
              },
              {
                "kind" : "Char",
                "val" : 100
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Yield"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 1
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "&&",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 38
              },
              {
                "kind" : "Char",
                "val" : 38
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{1}",
          "expression" : {
            "kind" : "Integer",
            "value" : 1
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "And"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 1
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "||",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 124
              },
              {
                "kind" : "Char",
                "val" : 124
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{1}",
          "expression" : {
            "kind" : "Integer",
            "value" : 1
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Or"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Bracket"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 2
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 3
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "==",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 61
              },
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 3
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{2}",
          "expression" : {
            "kind" : "Integer",
            "value" : 2
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Equal"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 2
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 3
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "!=",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 33
              },
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 3
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{2}",
          "expression" : {
            "kind" : "Integer",
            "value" : 2
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "NotEqual"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 3
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ">",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 62
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 4
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{3}",
          "expression" : {
            "kind" : "Integer",
            "value" : 3
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Greater"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 3
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "<",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 60
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 4
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{3}",
          "expression" : {
            "kind" : "Integer",
            "value" : 3
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Less"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 3
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ">=",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 62
              },
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 4
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{3}",
          "expression" : {
            "kind" : "Integer",
            "value" : 3
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "GreaterEq"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 3
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "<=",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 60
              },
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 4
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{3}",
          "expression" : {
            "kind" : "Integer",
            "value" : 3
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "LessEq"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 4
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "-",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 45
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 5
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{4}",
          "expression" : {
            "kind" : "Integer",
            "value" : 4
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Minus"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 4
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "+",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 43
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 5
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{4}",
          "expression" : {
            "kind" : "Integer",
            "value" : 4
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Plus"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 5
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 5
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "*",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 42
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 6
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{5}",
          "expression" : {
            "kind" : "Integer",
            "value" : 5
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Multiplication"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 5
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 5
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "/",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 47
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 6
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{5}",
          "expression" : {
            "kind" : "Integer",
            "value" : 5
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Division"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Expression",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 6
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 6
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Arguments"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Call"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "$default$"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 1
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ">>",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 62
              },
              {
                "kind" : "Char",
                "val" : 62
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Follow"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 1
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "!",
          "postConditions" : [
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_FOLLOW",
              "regularExpression" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 62
                  }
                ]
              }
            }
          ],
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 33
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Label"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Except"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "NontName"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Nont"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Char",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 39
              },
              {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "CharRange",
                          "start" : 1,
                          "end" : 33
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 35,
                          "end" : 38
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 40,
                          "end" : 91
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 93,
                          "end" : 1114111
                        }
                      ]
                    },
                    {
                      "kind" : "Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 92
                        },
                        {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 34
                            },
                            {
                              "kind" : "Char",
                              "val" : 39
                            },
                            {
                              "kind" : "Char",
                              "val" : 92
                            },
                            {
                              "kind" : "Char",
                              "val" : 102
                            },
                            {
                              "kind" : "Char",
                              "val" : 110
                            },
                            {
                              "kind" : "Char",
                              "val" : 114
                            },
                            {
                              "kind" : "Char",
                              "val" : 116
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "kind" : "Char",
                "val" : 39
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Character"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "String",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 34
              },
              {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "CharRange",
                          "start" : 1,
                          "end" : 33
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 35,
                          "end" : 38
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 40,
                          "end" : 91
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 93,
                          "end" : 1114111
                        }
                      ]
                    },
                    {
                      "kind" : "Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 92
                        },
                        {
                          "kind" : "regex.Alt",
                          "symbols" : [
                            {
                              "kind" : "Char",
                              "val" : 34
                            },
                            {
                              "kind" : "Char",
                              "val" : 39
                            },
                            {
                              "kind" : "Char",
                              "val" : 92
                            },
                            {
                              "kind" : "Char",
                              "val" : 102
                            },
                            {
                              "kind" : "Char",
                              "val" : 110
                            },
                            {
                              "kind" : "Char",
                              "val" : 114
                            },
                            {
                              "kind" : "Char",
                              "val" : 116
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "kind" : "Char",
                "val" : 34
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "String"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 1
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "!>>",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 33
              },
              {
                "kind" : "Char",
                "val" : 62
              },
              {
                "kind" : "Char",
                "val" : 62
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "NotFollow"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 1
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 1
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "\\",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 92
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Exclude"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Expression, ,, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Expression, ,, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ",",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 44
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Expression+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Expression"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Expression, ,, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Expression+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Expression"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "[",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 91
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "{Expression, ,, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "]",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 93
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Constraints"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Binding, ,, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Binding, ,, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ",",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 44
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Binding"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Binding+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Binding"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Binding, ,, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Binding"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Binding+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Binding"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "{",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 123
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "{Binding, ,, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "}",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 125
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Bindings"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ":",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 58
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{2}",
          "expression" : {
            "kind" : "Integer",
            "value" : 2
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Labeled"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "<<",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 60
              },
              {
                "kind" : "Char",
                "val" : 60
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{2}",
          "expression" : {
            "kind" : "Integer",
            "value" : 2
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Precede"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "!<<",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 33
              },
              {
                "kind" : "Char",
                "val" : 60
              },
              {
                "kind" : "Char",
                "val" : 60
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{2}",
          "expression" : {
            "kind" : "Integer",
            "value" : 2
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "NotPrecede"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "=",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 2
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{2}",
          "expression" : {
            "kind" : "Integer",
            "value" : 2
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Variable"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "ignore",
          "category" : "Keyword",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 110
              },
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 101
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "variable" : "r",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 3
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{(r <= 0)? 3 : min(r,3)}",
          "expression" : {
            "kind" : "IfThenElseExpr",
            "condition" : {
              "kind" : "LessThanEqual",
              "lhs" : {
                "kind" : "Name",
                "name" : "r",
                "i" : -1
              },
              "rhs" : {
                "kind" : "Integer",
                "value" : 0
              }
            },
            "thenPart" : {
              "kind" : "Integer",
              "value" : 3
            },
            "elsePart" : {
              "kind" : "Call",
              "fun" : "min",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "r",
                  "i" : -1
                },
                {
                  "kind" : "Integer",
                  "value" : 3
                }
              ]
            }
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Ignore"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "?",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 63
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ":",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 58
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "variable" : "r",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 3
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{(r <= 0)? 3 : min(r,3)}",
          "expression" : {
            "kind" : "IfThenElseExpr",
            "condition" : {
              "kind" : "LessThanEqual",
              "lhs" : {
                "kind" : "Name",
                "name" : "r",
                "i" : -1
              },
              "rhs" : {
                "kind" : "Integer",
                "value" : 0
              }
            },
            "thenPart" : {
              "kind" : "Integer",
              "value" : 3
            },
            "elsePart" : {
              "kind" : "Call",
              "fun" : "min",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "r",
                  "i" : -1
                },
                {
                  "kind" : "Integer",
                  "value" : 3
                }
              ]
            }
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Conditional"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "align",
          "category" : "Keyword",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 97
              },
              {
                "kind" : "Char",
                "val" : 108
              },
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 110
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "variable" : "r",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 3
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{(r <= 0)? 3 : min(r,3)}",
          "expression" : {
            "kind" : "IfThenElseExpr",
            "condition" : {
              "kind" : "LessThanEqual",
              "lhs" : {
                "kind" : "Name",
                "name" : "r",
                "i" : -1
              },
              "rhs" : {
                "kind" : "Integer",
                "value" : 0
              }
            },
            "thenPart" : {
              "kind" : "Integer",
              "value" : 3
            },
            "elsePart" : {
              "kind" : "Call",
              "fun" : "min",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "r",
                  "i" : -1
                },
                {
                  "kind" : "Integer",
                  "value" : 3
                }
              ]
            }
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Align"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 4
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "+",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 43
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Plus"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 4
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "*",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 42
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Star"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 4
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 4
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "?",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 63
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Option"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Symbols)",
        "nodeType" : "Seq"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "|",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 124
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbols"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Sequence",
        "name" : "(| Symbols)",
        "symbols" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          },
          {
            "kind" : "Nonterminal",
            "name" : "Symbols"
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Symbols)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(| Symbols)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "(| Symbols)",
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(| Symbols)+",
        "s" : {
          "kind" : "Sequence",
          "name" : "(| Symbols)",
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "|",
              "regex" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 124
                  }
                ]
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Symbols"
            }
          ]
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Symbols)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(| Symbols)",
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(| Symbols)+",
        "s" : {
          "kind" : "Sequence",
          "name" : "(| Symbols)",
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "|",
              "regex" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 124
                  }
                ]
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Symbols"
            }
          ]
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbols"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "(| Symbols)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Alternation"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Symbol+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Symbol"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Symbol+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Symbol"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Sequence"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "offside",
          "category" : "Keyword",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 111
              },
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 102
              },
              {
                "kind" : "Char",
                "val" : 115
              },
              {
                "kind" : "Char",
                "val" : 105
              },
              {
                "kind" : "Char",
                "val" : 100
              },
              {
                "kind" : "Char",
                "val" : 101
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "variable" : "r",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 5
            }
          ]
        },
        {
          "kind" : "Return",
          "name" : "{(r <= 0)? 5 : min(r,5)}",
          "expression" : {
            "kind" : "IfThenElseExpr",
            "condition" : {
              "kind" : "LessThanEqual",
              "lhs" : {
                "kind" : "Name",
                "name" : "r",
                "i" : -1
              },
              "rhs" : {
                "kind" : "Integer",
                "value" : 0
              }
            },
            "thenPart" : {
              "kind" : "Integer",
              "value" : 5
            },
            "elsePart" : {
              "kind" : "Call",
              "fun" : "min",
              "arguments" : [
                {
                  "kind" : "Name",
                  "name" : "r",
                  "i" : -1
                },
                {
                  "kind" : "Integer",
                  "value" : 5
                }
              ]
            }
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Offside"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol",
        "parameters" : [
          "p"
        ]
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "preConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "GreaterThanEqual",
                "lhs" : {
                  "kind" : "Integer",
                  "value" : 6
                },
                "rhs" : {
                  "kind" : "Name",
                  "name" : "p",
                  "i" : -1
                }
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "DataDependentCondition",
              "type" : "DATA_DEPENDENT",
              "expression" : {
                "kind" : "Or",
                "lhs" : {
                  "kind" : "LessThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 0
                  }
                },
                "rhs" : {
                  "kind" : "GreaterThanEqual",
                  "lhs" : {
                    "kind" : "Name",
                    "name" : "l",
                    "i" : -1
                  },
                  "rhs" : {
                    "kind" : "Integer",
                    "value" : 6
                  }
                }
              }
            }
          ],
          "variable" : "l",
          "arguments" : [
            {
              "kind" : "Name",
              "name" : "p",
              "i" : -1
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Arguments"
        },
        {
          "kind" : "Return",
          "name" : "{0}",
          "expression" : {
            "kind" : "Integer",
            "value" : 0
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Call"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "AAttribute"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Associativity",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 114
                  },
                  {
                    "kind" : "Char",
                    "val" : 105
                  },
                  {
                    "kind" : "Char",
                    "val" : 103
                  },
                  {
                    "kind" : "Char",
                    "val" : 104
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 108
                  },
                  {
                    "kind" : "Char",
                    "val" : 101
                  },
                  {
                    "kind" : "Char",
                    "val" : 102
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 110
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 110
                  },
                  {
                    "kind" : "Char",
                    "val" : 45
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 115
                  },
                  {
                    "kind" : "Char",
                    "val" : 115
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 99
                  }
                ]
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Assoc"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Symbol*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Symbol"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbol*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Symbol*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Symbol"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Symbols"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol*",
          "nodeType" : "Star"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Sequence"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Sequence)",
        "nodeType" : "Seq"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "|",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 124
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Sequence"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Sequence",
        "name" : "(| Sequence)",
        "symbols" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          },
          {
            "kind" : "Nonterminal",
            "name" : "Sequence"
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Sequence)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(| Sequence)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "(| Sequence)",
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(| Sequence)+",
        "s" : {
          "kind" : "Sequence",
          "name" : "(| Sequence)",
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "|",
              "regex" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 124
                  }
                ]
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Sequence"
            }
          ]
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "(| Sequence)+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "(| Sequence)",
          "nodeType" : "Seq"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "(| Sequence)+",
        "s" : {
          "kind" : "Sequence",
          "name" : "(| Sequence)",
          "symbols" : [
            {
              "kind" : "Terminal",
              "name" : "|",
              "regex" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 124
                  }
                ]
              }
            },
            {
              "kind" : "Nonterminal",
              "name" : "Sequence"
            }
          ]
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Alternate"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Sequence"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "(| Sequence)+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "AAttribute"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Assoc"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Alternate"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Sequence"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Sequence"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "VarName"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Identifier"
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "NontName"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Identifier"
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Range"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "RangeChar",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 92
                  },
                  {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 32
                      },
                      {
                        "kind" : "Char",
                        "val" : 45
                      },
                      {
                        "kind" : "CharRange",
                        "start" : 91,
                        "end" : 93
                      },
                      {
                        "kind" : "Char",
                        "val" : 102
                      },
                      {
                        "kind" : "Char",
                        "val" : 110
                      },
                      {
                        "kind" : "Char",
                        "val" : 114
                      },
                      {
                        "kind" : "Char",
                        "val" : 116
                      }
                    ]
                  }
                ]
              },
              {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 1,
                    "end" : 31
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 33,
                    "end" : 44
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 46,
                    "end" : 90
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 94,
                    "end" : 1114111
                  }
                ]
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "-",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 45
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "RangeChar",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 92
                  },
                  {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 32
                      },
                      {
                        "kind" : "Char",
                        "val" : 45
                      },
                      {
                        "kind" : "CharRange",
                        "start" : 91,
                        "end" : 93
                      },
                      {
                        "kind" : "Char",
                        "val" : 102
                      },
                      {
                        "kind" : "Char",
                        "val" : 110
                      },
                      {
                        "kind" : "Char",
                        "val" : 114
                      },
                      {
                        "kind" : "Char",
                        "val" : 116
                      }
                    ]
                  }
                ]
              },
              {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 1,
                    "end" : 31
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 33,
                    "end" : 44
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 46,
                    "end" : 90
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 94,
                    "end" : 1114111
                  }
                ]
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Range"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Range"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "RangeChar",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 92
                  },
                  {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 32
                      },
                      {
                        "kind" : "Char",
                        "val" : 45
                      },
                      {
                        "kind" : "CharRange",
                        "start" : 91,
                        "end" : 93
                      },
                      {
                        "kind" : "Char",
                        "val" : 102
                      },
                      {
                        "kind" : "Char",
                        "val" : 110
                      },
                      {
                        "kind" : "Char",
                        "val" : 114
                      },
                      {
                        "kind" : "Char",
                        "val" : 116
                      }
                    ]
                  }
                ]
              },
              {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 1,
                    "end" : 31
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 33,
                    "end" : 44
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 46,
                    "end" : 90
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 94,
                    "end" : 1114111
                  }
                ]
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Character"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "RegexRule+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "RegexRule+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "RegexRule"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "RegexRule+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "RegexRule"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "RegexRule+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "RegexRule"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "RegexRule+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "RegexRule"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Rule"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "regex",
          "category" : "Keyword",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 120
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "{",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 123
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "RegexRule+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "}",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 125
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Rule"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "regex",
          "category" : "Keyword",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 114
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 103
              },
              {
                "kind" : "Char",
                "val" : 101
              },
              {
                "kind" : "Char",
                "val" : 120
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "RegexRule"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Tag?",
        "nodeType" : "Opt"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Tag",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 83
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 114
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 76
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 121
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 117
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 78
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 76
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 121
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 117
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "Tag?",
        "s" : {
          "kind" : "Terminal",
          "name" : "Tag",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 83
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 114
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 76
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 121
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 117
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 78
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 76
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 121
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 117
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Tag?",
        "nodeType" : "Opt"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "Tag?",
        "s" : {
          "kind" : "Terminal",
          "name" : "Tag",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 83
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 114
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 76
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 121
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 117
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 64
                  },
                  {
                    "kind" : "Char",
                    "val" : 78
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 76
                  },
                  {
                    "kind" : "Char",
                    "val" : 97
                  },
                  {
                    "kind" : "Char",
                    "val" : 121
                  },
                  {
                    "kind" : "Char",
                    "val" : 111
                  },
                  {
                    "kind" : "Char",
                    "val" : 117
                  },
                  {
                    "kind" : "Char",
                    "val" : 116
                  }
                ]
              }
            ]
          }
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Parameters?",
        "nodeType" : "Opt"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Parameters"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "Parameters?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Parameters"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Parameters?",
        "nodeType" : "Opt"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "Parameters?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Parameters"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Rule"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Tag?",
          "nodeType" : "Opt"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "NontName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Parameters?",
          "nodeType" : "Opt"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ":",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 58
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Body"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Syntax"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Attribute"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "LAttribute"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Attribute"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "AAttribute"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Label"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Identifier"
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "LAttribute"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "<",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 60
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Label"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ">",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 62
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Label"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Rule+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Rule+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Rule"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Rule+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Rule"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Rule+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Rule"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Rule+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Rule"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Definition"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Rule+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "WhiteSpaceOrComment+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment"
        }
      ],
      "definition" : {
        "kind" : "Plus",
        "name" : "WhiteSpaceOrComment+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "WhiteSpaceOrComment+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "WhiteSpaceOrComment+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "WhiteSpaceOrComment*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment+",
          "nodeType" : "Plus"
        }
      ],
      "definition" : {
        "kind" : "Star",
        "name" : "WhiteSpaceOrComment*",
        "postConditions" : [
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 47
                },
                {
                  "kind" : "Char",
                  "val" : 47
                }
              ]
            }
          },
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 47
                },
                {
                  "kind" : "Char",
                  "val" : 42
                }
              ]
            }
          },
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 9,
                  "end" : 10
                },
                {
                  "kind" : "CharRange",
                  "start" : 12,
                  "end" : 13
                },
                {
                  "kind" : "Char",
                  "val" : 32
                }
              ]
            }
          }
        ],
        "s" : {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "WhiteSpaceOrComment*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "WhiteSpaceOrComment*",
        "postConditions" : [
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 47
                },
                {
                  "kind" : "Char",
                  "val" : 47
                }
              ]
            }
          },
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 47
                },
                {
                  "kind" : "Char",
                  "val" : 42
                }
              ]
            }
          },
          {
            "kind" : "RegularExpressionCondition",
            "type" : "NOT_FOLLOW",
            "regularExpression" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 9,
                  "end" : 10
                },
                {
                  "kind" : "CharRange",
                  "start" : 12,
                  "end" : 13
                },
                {
                  "kind" : "Char",
                  "val" : 32
                }
              ]
            }
          }
        ],
        "s" : {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "WhiteSpaceOrComment*",
          "postConditions" : [
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_FOLLOW",
              "regularExpression" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 47
                  },
                  {
                    "kind" : "Char",
                    "val" : 47
                  }
                ]
              }
            },
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_FOLLOW",
              "regularExpression" : {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 47
                  },
                  {
                    "kind" : "Char",
                    "val" : 42
                  }
                ]
              }
            },
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_FOLLOW",
              "regularExpression" : {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "CharRange",
                    "start" : 9,
                    "end" : 10
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 12,
                    "end" : 13
                  },
                  {
                    "kind" : "Char",
                    "val" : 32
                  }
                ]
              }
            }
          ],
          "nodeType" : "Star"
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "WhiteSpaceOrComment"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "Comment",
          "regex" : {
            "kind" : "regex.Alt",
            "symbols" : [
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 47
                  },
                  {
                    "kind" : "Char",
                    "val" : 47
                  },
                  {
                    "kind" : "regex.Star",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "CharRange",
                          "start" : 1,
                          "end" : 9
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 11,
                          "end" : 12
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 14,
                          "end" : 1114111
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "regex.Alt",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 10
                      },
                      {
                        "kind" : "Char",
                        "val" : 13
                      }
                    ]
                  }
                ]
              },
              {
                "kind" : "Seq",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 47
                  },
                  {
                    "kind" : "Char",
                    "val" : 42
                  },
                  {
                    "kind" : "regex.Star",
                    "regex" : {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "Seq",
                          "symbols" : [
                            {
                              "kind" : "regex.Star",
                              "regex" : {
                                "kind" : "Char",
                                "val" : 42
                              }
                            },
                            {
                              "kind" : "regex.Alt",
                              "symbols" : [
                                {
                                  "kind" : "CharRange",
                                  "start" : 1,
                                  "end" : 41
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 43,
                                  "end" : 46
                                },
                                {
                                  "kind" : "CharRange",
                                  "start" : 48,
                                  "end" : 1114111
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "kind" : "Char",
                          "val" : 47
                        }
                      ]
                    }
                  },
                  {
                    "kind" : "regex.Plus",
                    "regex" : {
                      "kind" : "Char",
                      "val" : 42
                    }
                  },
                  {
                    "kind" : "Char",
                    "val" : 47
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "WhiteSpaceOrComment"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "WhiteSpaces",
          "regex" : {
            "kind" : "regex.Plus",
            "regex" : {
              "kind" : "regex.Alt",
              "symbols" : [
                {
                  "kind" : "CharRange",
                  "start" : 9,
                  "end" : 10
                },
                {
                  "kind" : "CharRange",
                  "start" : 12,
                  "end" : 13
                },
                {
                  "kind" : "Char",
                  "val" : 32
                }
              ]
            }
          }
        }
      ]
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Expression, ,, null}*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Expression, ,, null}+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Expression*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Expression"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Expression, ,, null}*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Expression*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Expression"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Arguments"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "{Expression, ,, null}*",
          "nodeType" : "Star"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{RegexSequence, |, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{RegexSequence, |, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "|",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 124
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "RegexSequence"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "RegexSequence+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "RegexSequence"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{RegexSequence, |, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "RegexSequence"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "RegexSequence+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "RegexSequence"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{RegexSequence, |, null}*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{RegexSequence, |, null}+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "RegexSequence*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "RegexSequence"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{RegexSequence, |, null}*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "RegexSequence*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "RegexSequence"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : "|",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 124
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "RegexBody"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{RegexSequence, |, null}*",
          "nodeType" : "Star"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "RegexSequence"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Sequence"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "ReturnExpression"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "{",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 123
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "}",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 125
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "ReturnExpression"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{VarName, ,, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{VarName, ,, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ",",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 44
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "VarName+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{VarName, ,, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "VarName+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{VarName, ,, null}*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{VarName, ,, null}+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "VarName*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{VarName, ,, null}*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "VarName*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ",",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 44
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Parameters"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "(",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 40
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "{VarName, ,, null}*",
          "nodeType" : "Star"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ")",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 41
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Regexs"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Regex+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Sequence"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "ReturnExpression?",
        "nodeType" : "Opt"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "ReturnExpression"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "ReturnExpression?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "ReturnExpression"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "ReturnExpression?",
        "nodeType" : "Opt"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "ReturnExpression?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "ReturnExpression"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "LAttribute?",
        "nodeType" : "Opt"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "LAttribute"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "LAttribute?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "LAttribute"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "LAttribute?",
        "nodeType" : "Opt"
      },
      "definition" : {
        "kind" : "Opt",
        "name" : "LAttribute?",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "LAttribute"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Sequence"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "ReturnExpression?",
          "nodeType" : "Opt"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "LAttribute?",
          "nodeType" : "Opt"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Single"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Attribute+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Attribute+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Attribute"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Attribute+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Attribute"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Attribute+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Attribute"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Attribute+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Attribute"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Attribute*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Attribute+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Attribute*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Attribute"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Attribute*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Attribute*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Attribute"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Sequence"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Symbol",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Symbol+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "ReturnExpression?",
          "nodeType" : "Opt"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Attribute*",
          "nodeType" : "Star"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "MoreThanTwo"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Identifier"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "LetterOrDigits",
          "preConditions" : [
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_PRECEDE",
              "regularExpression" : {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 36
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 65,
                    "end" : 90
                  },
                  {
                    "kind" : "Char",
                    "val" : 95
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 97,
                    "end" : 122
                  }
                ]
              }
            }
          ],
          "postConditions" : [
            {
              "kind" : "RegularExpressionCondition",
              "type" : "NOT_MATCH",
              "regularExpression" : {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 114
                      },
                      {
                        "kind" : "Char",
                        "val" : 105
                      },
                      {
                        "kind" : "Char",
                        "val" : 103
                      },
                      {
                        "kind" : "Char",
                        "val" : 104
                      },
                      {
                        "kind" : "Char",
                        "val" : 116
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 105
                      },
                      {
                        "kind" : "Char",
                        "val" : 103
                      },
                      {
                        "kind" : "Char",
                        "val" : 110
                      },
                      {
                        "kind" : "Char",
                        "val" : 111
                      },
                      {
                        "kind" : "Char",
                        "val" : 114
                      },
                      {
                        "kind" : "Char",
                        "val" : 101
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 110
                      },
                      {
                        "kind" : "Char",
                        "val" : 111
                      },
                      {
                        "kind" : "Char",
                        "val" : 110
                      },
                      {
                        "kind" : "Char",
                        "val" : 45
                      },
                      {
                        "kind" : "Char",
                        "val" : 97
                      },
                      {
                        "kind" : "Char",
                        "val" : 115
                      },
                      {
                        "kind" : "Char",
                        "val" : 115
                      },
                      {
                        "kind" : "Char",
                        "val" : 111
                      },
                      {
                        "kind" : "Char",
                        "val" : 99
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 111
                      },
                      {
                        "kind" : "Char",
                        "val" : 102
                      },
                      {
                        "kind" : "Char",
                        "val" : 102
                      },
                      {
                        "kind" : "Char",
                        "val" : 115
                      },
                      {
                        "kind" : "Char",
                        "val" : 105
                      },
                      {
                        "kind" : "Char",
                        "val" : 100
                      },
                      {
                        "kind" : "Char",
                        "val" : 101
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 97
                      },
                      {
                        "kind" : "Char",
                        "val" : 108
                      },
                      {
                        "kind" : "Char",
                        "val" : 105
                      },
                      {
                        "kind" : "Char",
                        "val" : 103
                      },
                      {
                        "kind" : "Char",
                        "val" : 110
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 118
                      },
                      {
                        "kind" : "Char",
                        "val" : 97
                      },
                      {
                        "kind" : "Char",
                        "val" : 114
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 114
                      },
                      {
                        "kind" : "Char",
                        "val" : 101
                      },
                      {
                        "kind" : "Char",
                        "val" : 103
                      },
                      {
                        "kind" : "Char",
                        "val" : 101
                      },
                      {
                        "kind" : "Char",
                        "val" : 120
                      }
                    ]
                  },
                  {
                    "kind" : "Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 108
                      },
                      {
                        "kind" : "Char",
                        "val" : 101
                      },
                      {
                        "kind" : "Char",
                        "val" : 102
                      },
                      {
                        "kind" : "Char",
                        "val" : 116
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "regex.Alt",
                "symbols" : [
                  {
                    "kind" : "Char",
                    "val" : 36
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 65,
                    "end" : 90
                  },
                  {
                    "kind" : "Char",
                    "val" : 95
                  },
                  {
                    "kind" : "CharRange",
                    "start" : 97,
                    "end" : 122
                  }
                ]
              },
              {
                "kind" : "regex.Star",
                "regex" : {
                  "kind" : "regex.Alt",
                  "symbols" : [
                    {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 36
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 48,
                          "end" : 57
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 65,
                          "end" : 90
                        },
                        {
                          "kind" : "Char",
                          "val" : 95
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 97,
                          "end" : 122
                        }
                      ]
                    },
                    {
                      "kind" : "regex.Alt",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 36
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 65,
                          "end" : 90
                        },
                        {
                          "kind" : "Char",
                          "val" : 95
                        },
                        {
                          "kind" : "CharRange",
                          "start" : 97,
                          "end" : 122
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "label" : "Ident"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Range+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Range+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Range"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Range+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Range"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Range+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Range"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Range+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Range"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Range*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Range+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Range*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Range"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Range*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Range*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Range"
        }
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "CharClass"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "[^",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 91
              },
              {
                "kind" : "Char",
                "val" : 94
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Range*",
          "nodeType" : "Star"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "]",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 93
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "NotChars"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "CharClass"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "[",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 91
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Range*",
          "nodeType" : "Star"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "]",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 93
              }
            ]
          }
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Chars"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Alternates, >, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Alternates, >, null}+",
          "nodeType" : "Plus"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : ">",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 62
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Alternates"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Alternates+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Alternates"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ">",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 62
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Alternates, >, null}+",
        "nodeType" : "Plus"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Alternates"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Plus",
        "name" : "Alternates+",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Alternates"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ">",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 62
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Alternates, >, null}*",
        "nodeType" : "Star"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Alternates, >, null}+",
          "nodeType" : "Plus"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Alternates*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Alternates"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ">",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 62
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "{Alternates, >, null}*",
        "nodeType" : "Star"
      },
      "definition" : {
        "kind" : "Star",
        "name" : "Alternates*",
        "s" : {
          "kind" : "Nonterminal",
          "name" : "Alternates"
        },
        "separators" : [
          {
            "kind" : "Terminal",
            "name" : ">",
            "regex" : {
              "kind" : "Seq",
              "symbols" : [
                {
                  "kind" : "Char",
                  "val" : 62
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Body"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "{Alternates, >, null}*",
          "nodeType" : "Star"
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      }
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Binding"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "=",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Assign"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Binding"
      },
      "body" : [
        {
          "kind" : "Terminal",
          "name" : "var",
          "category" : "Keyword",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 118
              },
              {
                "kind" : "Char",
                "val" : 97
              },
              {
                "kind" : "Char",
                "val" : 114
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "VarName"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Terminal",
          "name" : "=",
          "regex" : {
            "kind" : "Seq",
            "symbols" : [
              {
                "kind" : "Char",
                "val" : 61
              }
            ]
          }
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Expression",
          "arguments" : [
            {
              "kind" : "Integer",
              "value" : 0
            }
          ]
        }
      ],
      "layout" : {
        "kind" : "Nonterminal",
        "name" : "Layout"
      },
      "label" : "Declare"
    },
    {
      "kind" : "Rule",
      "head" : {
        "kind" : "Nonterminal",
        "name" : "Start(Definition)",
        "nodeType" : "Start"
      },
      "body" : [
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Definition"
        },
        {
          "kind" : "Nonterminal",
          "name" : "Layout"
        }
      ],
      "definition" : {
        "kind" : "Start",
        "name" : "Start(Definition)",
        "nonterminal" : {
          "kind" : "Nonterminal",
          "name" : "Definition"
        }
      }
    }
  ],
  "startSymbol" : {
    "kind" : "Start",
    "name" : "Start(Definition)",
    "nonterminal" : {
      "kind" : "Nonterminal",
      "name" : "Definition"
    }
  }
}
