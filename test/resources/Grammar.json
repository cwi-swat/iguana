{
  "kind" : "HighLevelGrammar",
  "rules" : [
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Terminal",
                  "name" : "a",
                  "regex" : {
                    "kind" : "regex.Seq",
                    "symbols" : [
                      {
                        "kind" : "Char",
                        "val" : 97
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      ],
      "head" : {
        "kind" : "Nonterminal",
        "name" : "A"
      }
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative"
            }
          ]
        }
      ],
      "head" : {
        "kind" : "Nonterminal",
        "name" : "E"
      }
    },
    {
      "kind" : "HighLevelRule",
      "alternativesList" : [
        {
          "kind" : "Alternatives",
          "alternatives" : [
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "A"
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "b",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 98
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind" : "Alternative",
              "first" : {
                "kind" : "Seq",
                "first" : {
                  "kind" : "Nonterminal",
                  "name" : "E"
                },
                "rest" : [
                  {
                    "kind" : "Terminal",
                    "name" : "c",
                    "regex" : {
                      "kind" : "regex.Seq",
                      "symbols" : [
                        {
                          "kind" : "Char",
                          "val" : 99
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind" : "Alternative"
            }
          ]
        }
      ],
      "head" : {
        "kind" : "Nonterminal",
        "name" : "B"
      }
    }
  ]
}
